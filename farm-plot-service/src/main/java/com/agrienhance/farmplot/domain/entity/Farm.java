package com.agrienhance.farmplot.domain.entity;

import jakarta.persistence.*;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;
import lombok.*; // Import Lombok annotations
import org.hibernate.annotations.UuidGenerator;
import org.locationtech.jts.geom.Point;

import java.time.OffsetDateTime;
import java.util.UUID;

@Getter
@Setter
@NoArgsConstructor // JPA requirement
@AllArgsConstructor // Optional, useful with Builder
@Builder // To enable the Builder pattern
@EqualsAndHashCode(of = "farmIdentifier") // Important for JPA entities
@ToString // Customize as needed
@Entity
@Table(name = "farms")
public class Farm {

    @Id
    @GeneratedValue
    @UuidGenerator
    @Column(name = "farm_identifier", updatable = false, nullable = false)
    private UUID farmIdentifier;

    @Size(max = 255)
    @Column(name = "farm_name")
    private String farmName;

    @NotNull
    @Column(name = "owner_reference_id", nullable = false)
    private UUID ownerReferenceId;

    @NotNull
    @Size(min = 2, max = 2)
    @Column(name = "country_code", nullable = false, length = 2)
    private String countryCode;

    @Size(max = 255)
    @Column(name = "region")
    private String region;

    @Column(name = "general_location_coordinates", columnDefinition = "geometry(Point,4326)")
    @ToString.Exclude
    private Point generalLocationCoordinates;

    @Lob
    @Column(name = "notes")
    private String notes;

    @NotNull
    @Column(name = "tenant_id", nullable = false)
    private UUID tenantId;

    @NotNull
    @Column(name = "created_at", nullable = false, updatable = false)
    private OffsetDateTime createdAt;

    @NotNull
    @Column(name = "updated_at", nullable = false)
    private OffsetDateTime updatedAt;

    @Version
    @Column(name = "version", nullable = false)
    private Long version;

    // @OneToMany relationship to Plots would go here if bi-directional
    // Ensure @ToString.Exclude on it if it's lazy-loaded to avoid issues

    @PrePersist
    protected void onCreate() {
        updatedAt = createdAt = OffsetDateTime.now();
        // farmIdentifier is generated by @UuidGenerator on persist
    }

    @PreUpdate
    protected void onUpdate() {
        updatedAt = OffsetDateTime.now();
    }
}